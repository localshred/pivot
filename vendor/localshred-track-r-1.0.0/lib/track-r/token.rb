class Token
	def initialize(options = {})
		@token = case
						 when options.include?(:token)
							 options[:token]
						 when options.include?(:username) && options.include?(:password)
							 # If a token is not provided, it can be generated by passing a hash with :user and :password keys
							 get_token(options[:username], options[:password])
						 else
							 raise ArgumentError, "Invalid argument, expecting either <:token> or <:username> and <:password>"
						 end
	end

	def to_s
		@token.to_s
	end

	protected

	# According to http://www.pivotaltracker.com/help/api#retrieve_token this should work:
	def get_token(username, password)
    response = `curl -u '#{username}:#{password}' -X GET https://www.pivotaltracker.com/services/tokens/active`
    raise Exception, "Could not get token for login" if response.nil? || response.strip.empty?
    (Hpricot(response).at('guid')).inner_html
	end

end # class Tracker::Token
